- name: Update all system packages
  dnf:
    name: "*"
    state: latest
    update_cache: yes

- name: Install essential dependencies
  dnf:
    name:
      - unzip
      - pwgen
      - python3
      - python3-pip
      - ca-certificates
      - curl
      - dnf-plugins-core
    state: present

- name: Install Ansible
  dnf:
    name: ansible
    state: present

- name: Install Python Docker SDK (compatible version)
  pip:
    name: docker==5.0.3
    executable: pip3

- name: Add Docker GPG Key
  shell: "curl -fsSL {{ gitdocker_redhat }} -o /etc/pki/rpm-gpg/docker.gpg"
  args:
    creates: /etc/pki/rpm-gpg/docker.gpg

- name: Add Docker repository
  copy:
    dest: /etc/yum.repos.d/docker-ce.repo
    content: "{{ repodocker_redhat }}"

- name: Install Docker
  dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Install Docker Compose V2 plugin
  dnf:
    name: docker-compose-plugin
    state: present

- name: Enable and start Docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Check if docker compose (V2) is available
  command: docker compose version
  register: docker_compose_v2
  ignore_errors: yes

- name: Fail if Docker Compose V2 is not installed
  fail:
    msg: "Docker Compose V2 is required but not found. Please install Docker Compose V2."
  when: docker_compose_v2.rc != 0

- name: Download AWX
  get_url:
    url: "{{ awx }}"
    dest: "/tmp/awx.zip"

- name: Extract AWX
  unarchive:
    src: "/tmp/awx.zip"
    dest: "/tmp"
    remote_src: yes

- name: Generate secret key for AWX
  command: pwgen -N 1 -s 40
  register: awx_secret_key

- name: Show generated AWX secret key
  debug:
    msg: "Generated AWX secret key: {{ awx_secret_key.stdout }}"

- name: Set admin_password in AWX inventory
  lineinfile:
    path: "{{ path }}/inventory"
    regexp: '^#?(admin_password=.*)'
    line: 'admin_password={{ adminpass }}'

- name: Update other AWX inventory settings
  lineinfile:
    path: "{{ path }}/inventory"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  loop:
    - { regex: '^admin_user=.*', line: 'admin_user={{ admin }}' }
    - { regex: '^secret_key=.*', line: 'secret_key={{ awx_secret_key.stdout }}' }

- name: Run AWX installer
  command: ansible-playbook -i {{ path }}/inventory install.yml
  args:
    chdir: "{{ path }}"
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
