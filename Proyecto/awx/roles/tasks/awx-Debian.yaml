- name: Update packages
  apt:
    update_cache: yes
    upgrade: yes

- name: Install essential dependencies
  apt:
    name:
      - unzip
      - pwgen
      - python3
      - python3-pip
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

- name: Install Ansible
  apt:
    name: ansible
    state: present

- name: Add Docker GPG key
  shell: "curl -fsSL {{ gitdocker }} | apt-key add -"

- name: Add Docker repository
  apt_repository:
    repo: "{{ repodocker }}"
    state: present

- name: Install Docker and Docker Compose
  apt:
    name:
      - docker-ce
      - docker-compose
    state: present

# It's needed an python venv to use this installation
#- name: Install Docker Compose with pip
#  pip:
#    name: docker-compose

- name: Download AWX
  get_url:
    url: "{{ awx }}"
    dest: "/tmp/awx.zip"

- name: Extract AWX
  unarchive:
    src: "/tmp/awx.zip"
    dest: "/tmp"
    remote_src: yes

- name: Generate secret key for AWX
  command: pwgen -N 1 -s 40
  register: awx_secret_key
- debug:
    msg: "Generated AWX secret key: {{ awx_secret_key.stdout }}"

- name: Modify AWX configuration file (uncomment and update admin_password)
  lineinfile:
    path: "{{ path }}/inventory"
    regexp: '^#?(admin_password=.*)'  # Encuentra admin_password con o sin comentario
    line: 'admin_password={{ adminpass }}'  # Reemplaza con la nueva contrase√±a

- name: Modify other AWX configuration settings
  lineinfile:
    path: "{{ path }}/inventory"
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  loop:
    - { regex: '^admin_user=.*', line: 'admin_user={{ admin }}' }
    - { regex: '^secret_key=.*', line: 'secret_key={{ awx_secret_key.stdout }}' }

- name: Install AWX using Ansible
  command: ansible-playbook -i {{ path }}/inventory install.yml
  args:
    chdir: "{{ path }}"
